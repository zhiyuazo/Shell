#!/bin/bash
#add info
rpm -q expect > /dev/null
if [[ $? == 0 ]]; then
    :
else
    echo "Please install expect package ---> yum install expect...."
    exit 1
fi

function usage
{
    echo "Usage:"
    echo "      $0 gen \${IPaddress or Domain_name} \$keystore_name \$keystore_pwd \$cert_name \$cert_pwd"
    echo "      $0 view \$keystore_name  \$keystore_pwd"
    echo "      $0 import \$keystore_name  \$keystore_pwd \$cert_name \$cert_file"
    echo "      $0 export \$keystore_name  \$keystore_pwd \$cert_name \$cert_file"
    exit 1
}
if [[ $1 == "" ]]; then
    usage
fi

action=$1
shift
case $action in 
    gen)
        if [[ $# == 5 ]]; then
            IP=$1
            keystore_name=$2
            keystore_pwd=$3
            cert_name=$4
            cert_pwd=$5
        else 
            usage 
        fi

        expect   <<-END
set timeout 30
spawn keytool -genkey -alias $cert_name -keypass $cert_pwd  -keyalg  RSA  -keystore $keystore_name -storepass $keystore_pwd  -validity 365  -keysize 2048
expect "Unknown"
send "$IP\r"
expect "Unknown"
send "\r"
expect "Unknown"
send "nokia\r"
expect "Unknown"
send "\r"
expect "Unknown"
send "\r"
expect "Unknown"
send "\r"
expect -re "correct(.*)no"
send "y\r"
expect eof
exit 0
END
        if [[ $? != 0 ]]; then
            echo "Error when Generate certificate....."
            exit 1
        fi
        
        ;;

    view)
        if [[ $# == 2 ]]; then
            keystore_name=$1
            keystore_pwd=$2
        else 
            usage 
        fi
        keytool -v -list -keystore $keystore_name  -storepass $keystore_pwd

        ;;

    import)
        if [[ $# == 4 ]]; then
            keystore_name=$1
            keystore_pwd=$2
            cert_name=$3
            cert_file=$4
        else 
            usage 
        fi
        keytool -import -keystore $keystore_name -storepass $keystore_pwd -alias $cert_name -file $cert_file
        ;;

    export)
        if [[ $# == 4 ]]; then
            keystore_name=$1
            keystore_pwd=$2
            cert_name=$3
            cert_file=$4
        else 
            usage 
        fi
        keytool -export -keystore $keystore_name -storepass $keystore_pwd -alias $cert_name -file $cert_file

        ;;
     *)
            usage 
         ;;

esac 

exit 0
